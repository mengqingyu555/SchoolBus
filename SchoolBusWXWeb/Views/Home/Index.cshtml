@{
    ViewData["Title"] = "Home Page";
}
<link href="~/css/jquery.confirm-1.1.css" rel="stylesheet" />
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div>一起学习asp.net core</div>
    <button onclick="test_confirm()">中文按钮模态框</button>
</div>
@section Scripts{
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/js/jquery.confirm-1.1.js"></script>
<script>
    function test_confirm() {
        $.alert('Are you sure to continue?');
        console.log("asdf");
        //$.alert({
        //    title: 'Alert回调弹出框!',
        //    content: 'alert带回调函数，点击确定按钮触发回调函数',
        //    buttons: {
        //        ok: {
        //            text: '好', 
        //            action: function () { 
        //                alert("按钮回调函数被执行");
        //            }
        //        }
        //    }
        //});
       //$.confirm({
       //     title: 'Confirm回调确认框!',
       //     content: 'Confirm确认框，点击按钮触发回调函数',
       //     buttons: {
       //         ok: { //确定按钮
       //             text: '确定',
       //             action: function () {
       //                 return true;
       //             }
       //         },
       //         close: { //关闭按钮
       //             text: '关闭',
       //             action: function () {
       //                 return false;
       //             }
       //         }
       //     }
       // });
    }
</script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub?groupName=123").build();
    connection.on("ReceiveMessage", function (user, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " says " + msg;
        console.log(encodedMsg);
    });

    connection.start().then(function () {
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.onclose(async () => {
        console.info('监听到链接关闭');
        await start();
    });

    async function start() {
        try {
            await connection.start();
            console.log("connected");
        } catch (err) {
            console.log(err);
            setTimeout(() => start(), 5000); // 断线重连
        }
    };

</script>
}
